// @generated
// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Header {
    #[prost(uint64, tag="1")]
    pub tx_id: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LoadRequest {
    #[prost(bytes="vec", tag="1")]
    pub data: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CommandRequest {
    #[prost(uint64, tag="1")]
    pub module_id: u64,
    #[prost(uint64, tag="2")]
    pub id: u64,
    #[prost(bytes="vec", tag="3")]
    pub data: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Request {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<Header>,
    #[prost(oneof="request::Request", tags="2, 3")]
    pub request: ::core::option::Option<request::Request>,
}
/// Nested message and enum types in `Request`.
pub mod request {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Request {
        #[prost(message, tag="2")]
        Load(super::LoadRequest),
        #[prost(message, tag="3")]
        Command(super::CommandRequest),
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Response {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<Header>,
    #[prost(oneof="response::Response", tags="2, 3")]
    pub response: ::core::option::Option<response::Response>,
}
/// Nested message and enum types in `Response`.
pub mod response {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Response {
        #[prost(message, tag="2")]
        Load(super::LoadResponse),
        #[prost(message, tag="3")]
        Command(super::CommandResponse),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct LoadResponse {
    #[prost(uint64, tag="1")]
    pub module_id: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CommandResponse {
    #[prost(bytes="vec", tag="1")]
    pub data: ::prost::alloc::vec::Vec<u8>,
}
// @@protoc_insertion_point(module)
