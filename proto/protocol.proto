syntax = "proto3";

option go_package = "./protocol";

package protocol;

// Mapping from Rust enum Type
enum Type {
  TYPE_INVALID = 0; // Default fallback
  TYPE_LOAD = 1;
  TYPE_COMMAND = 2;
  TYPE_RESPONSE = 3;
  TYPE_LOAD_RESPONSE = 4;
}

// Common header
message Header {
  Type type = 1;
  uint64 len = 2;
}

// Represents a load message with variable length bytes
message Load {
  bytes data = 1;
}

message LoadResponse {
  uint32 module_id = 1;
}

// A command with a module ID, command ID, and payload
message Command {
  uint64 module_id = 1;
  uint64 id = 2;
  bytes data = 3;
}

// A response with data
message Response {
  bytes data = 1;
}

// A top-level message that can be one of Load or Command
message Protocol {
  oneof msg {
    Load load = 1;
    Command command = 2;
    Response response = 3;
    LoadResponse load_response = 4;
  }
}
